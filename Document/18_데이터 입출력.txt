1. 입출력 스트림
- 데이터 입출력: 데이터 입력 및 출력의 총칭
- 스트림: 단방향으로 데이터 처리
- 입력 스트림: 프로그램 기준으로 데이터가 들어옴
- 출력 스트림: 프로그램 기준으로 데이터가 나감
- 바이트 스트림: 모든 종류의 데이터를 입출력할 떄 사용
- 문자 스트림: 문자만 입출력할 때 사용

2. 바이트 코드 출력 스트림
- OutputStream: 바이트 출력 스트림의 최상위 추상 클래스
리턴 타입 | 메소드 | 설명
void | write() | 1byte 출력
void | write(byte[] b) | 매개값으로 주어진 배열 b의 모든 바이트를 출력
void | write(byte[] b, int off, int len) | 매개값으로 주어진 배열 b[off]부터 len개의 바이트를 출력
void | flush() | 출력 버퍼에 잔류하는 모든 바이트 출력
void | close() | 출력 스트림을 닫고 메모리 사용 해제

3. 바이트 입력 스트림
- InputStream: 바이트 입력 최상위 추상 클래스
리턴 타입 | 메소드          | 설명
int      | read()         | 1byte를 읽은 후 읽은 바이트를 리턴
int      | read(byte[] b) | 읽은 바이트를 매개값으로 주어진 배열에 저장 후 읽은 바이트 수를 리턴
void     | close()        | 입력 스트림을 닫고 사용 메모리 해제

- 더이상 읽을 바이트가 없다면 -1을 리턴한다.

- InputStream().transferTo(OutputStream): 입력 스트림에서 출력 스트림으로 바이트를 복사하는 메소드

4. 문자 입출력 스트림

4-1. 문자 출력
- Writer: 문자 출력 최상위 추상 클래스
리턴 타입 | 메소드                                | 설명
void     | write(int c)                         | 매개값으로 주어진 한 문자 출력
void     | write(char[] cbuf)                   | 매개값으로 주어진 배열의 모든 문자 출력
void     | write(char[] cbuf, int off, int len) | 매개값으로 주어진 배열에서 cbuf[off]부터 len개까지의 문자를 출력
void     | write(String str)                    | 매개값으로 주어진 문자열 출력
void     | write(String str, int off, int len)  | 매개값으로 주어진 문자열에서 cbuf[off]부터 len개까지의 문자를 출력
void     | flush()                              | 출력 버퍼에 잔류하는 모든 문자 출력
void     | close()                              | 출력 스트림을 닫고 메모리 사용 해제
- OutputStream과 사용하는 방법은 동일하다

4-2. 문자 읽기
- Reader: 문자 입력 최상위 추상 클래스
리턴 타입 | 메소드 | 설명
int  | read()            | 한 개의 문자를 읽고 리턴
int  | read(char[] cbuf) | 읽은 문자들을 매개값으로 주어진 문자 배열의 읽은 문자 수를 리턴
void | close()           | 입력 스트림을 닫고 메모리 사용 해제
- InputStream과 사용하는 방법은 동일하다

5. 보조 스트림
- 자체적으로 입출력을 할 수 없고 다른 입출력 스트림과 연결되어 기능을 제공하는 스트림
- 보조 스트림을 생성할 때 입출력 스트림을 매개값으로 전달한다.
- 보조 스트림을 생성할 때 보조 스트림을 매개값으로 전달하여 스트림 체인으로 구성할 수 있다.

6. 문자 변화 스트림

6-1. InputStream을 Reader로 변환
- InputStreamReader(InputStream): InputStream을 Reader로 변환

6-2. OutputStream을 Writer로 변환
- OutputStreamWriter(OutputStream): OutputStream을 Writer로 변환

7. 성능 향상 스트림
- 

