1. 함수란?
- 함수: 일련의 과정을 문으로 구현하고 코드 블록으로 감싸서 하나의 실행 단위로 정의한 것.
- 매개변수: 함수 내부로 입력을 전달받는 변수
- 인수: 입력
- 반환값: 출력
- 함수 이름: 함수를 구분하는 식별자

3. 함수 리터럴
- 구성 요소
-- function 키워드
-- 함수 이름: 함수 몸체 내부에서만 유효하다.
-- 매개 변수 목록 (... a)
-- 함수 몸체: {}

- 함수는 객체인 동시에 호출할 수 있다.

4. 함수 정의

4-1. 함수 선언문
- 함수 선언문은 표현식이 아닌 문이다.

- 자바스크립트 엔진은 함수 선언문이 값으로 평가되어야 할 문맥에 사용되면 해당 함수를 함수 리터럴 표현식으로 해석한다.
- 자바스크립트 엔진은 생성된 함수(함수 선언문)를 호출하기 위해 함수 이름과 동일한 이름의 식별자를 암묵적으로 생성하고, 거기에 함수 객체를 할당한다.

4-2. 함수 표현식
- 함수 표현식처럼 값의 성질을 갖는 객체를 일급 객체라 한다.
- 함수 표현식의 함수 리터럴은 함수 이름을 생략하는 것이 일반적이다.
- 함수를 호출하기 위해서는 함수 객체를 가리키는 식별자를 호출해야 한다.

4-3. 함수 생성 시점과 함수 호이스팅
- 모든 선언문은 런타임 이전에 자바 스크립트 엔진에 의해 먼저 실행된다.
- 함수 호이스팅을 통해 함수 선언 이전에 함수를 호출할 수 있다. (undefined로 초기화되지 않는다.)

4-4. Function 생성자 함수
- Function 생성자 함수에 매개변수 목록과 함수 몸체를 문자열로 전달하면서 new 연산자와 함께 호출하면 함수 객체를 생성해서 반환하다.
-- new는 생략 가능하다.

4-5. 화살표 함수
- 내부 동작이 기존의 함수보다 간략화 되어있다.

5. 함수 호출

5-1. 매개변수와 인수
- 매개변수: 함수 몸체 내부에서 변수와 동일하게 취급된다.
-- 일반 변수와 동일하게 undefined로 초기화된 이후 인수가 순서대로 할당된다. 