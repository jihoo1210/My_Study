1. 일급 객체
- 무명의 리터럴로 생성할 수 있다. (런타임에 생성이 가능하다.)
2. 변수나 자료구조에 저장할 수 있다.
3. 함수의 매개변수로 전달될 수 있다.
4. 함수의 반환값으로 사용될 수 있다.

- 함수는 객체이지만 일반 객체와는 다르다.
-- 호출이 가능하다.
-- 고유의 프로퍼티를 가진다.

2. 함수 객체의 프로퍼티
2-1. arguments 프로퍼티
- 함수 호출 시 전달된 인수들의 정보를 담고 있는 순환 가능한 유사 배열 객체
- 인수의 인덱스 번호(property key): 인수(property value)

- 유사 배열 객체
-- length 프로퍼티를 가지며 for 문으로 순회할 수 있는 객체.
-- 배열 메서드를 사용할 경우 에러가 발생한다.

- length: 입력받은 인자의 개수
-> arguments.length를 통해 인수의 개수를 얻을 수 있다.

2.2 caller 프로퍼티
- 자신을 호출한 함수의 정보

2.3 length 프로퍼티
- 함수를 정의할 때 선언한 매개변수의 개수를

2.4 name 프로퍼티
- 함수 이름

2.5 __proto__ 접근자 프로퍼티
- 모든 객체는 [[prototype]] 내부 슬롯을 지닌다.
- [[prototype]]: 객체지향 프로그래밍의 상속을 구현하는 프로토타입 객체를 가리킨다.

- [[prototype]] 객체에 접근하기 위해 __proto__ 접근자 프로퍼티를 사용한다.

2.6 prototype 프로퍼티
- 생성자 함수가 생성할 인스턴스의 프로토타입 객체를 가리킨다.