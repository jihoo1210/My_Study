1. Object 생성자 함수
- new Object()

- 생성자 함수
-- new 연산자와 함께 호출하여 객체(인스턴스)를 생성하는 함수.

2. 생성자 함수
2-1. 객체 리터럴에 의한 객체 생성 방식의 문제점
- 동일한 프로퍼티를 갖는 객체를 생성하는 경우 매번 같은 프로퍼티를 기술해야 한다.

2-2. 생성자 함수에 의한 객체 생성 방식
- 클래스처럼 생성자 함수를 사용하여 프로퍼티 구조가 동일한 객체를 간편하게 생산할 수 있다.

- this
-- 일반 함수로서 호출   | 전역 객체
-- 메서드로서 호출    |  메서드를 호출한 객체
-- 생성자 함수로서 호출 | 인스턴스

2-3. 생성자 함수의 인스턴스 생성 과정
2-3-1. 인스턴스 생성과 this 바인딩
- 런타임 이전에 암묵적으로 빈 객체를 생성하고 this에 해당 객체의 메모리 주소를 반환한다.

2-3-2. 인스턴스 초기화된다
- 생성자 함수의 코드가 실행되어 this에 바인딩 되어있는 인스턴스를 초기화한다.

2-3-3. 인스턴스 반환
- 생성자 함수의 모든 코드가 끝나면 암묵적으로 this를 반환한다.

2-4. 내부 메서드 [[call]]과 [[construct]]
- 함수는 객체이므로 일반 객체가 가지고 있는 내부 슬롯과 내부 메서드는 물론, 함수로서 동작하기 위한 내부 슬롯과 내부 메서드를 가진다.
-- 내부 슬롯
- [[environment]]
- [[formalParameters]]
-- 내부 메서드
- 일반 함수 호출 | [[call]]
- 생성자 함수 호출(new) | [[construct]]

- 모든 함수는 callable이다.

2.5 constructor와 non-constructor의 구분
- constructor: 함수, 선언문, 함수 표현식, 클래스
- non-constructor: 메서드, 화살표 함수

2.6 new 연산자
- new 연산자로 생성자 함수를 생성하면 [[construct]]가 호출된다.

2.7 new.target
- new.target은 자함수 자기 자신을 가리킨다